name: cd

on:
  pull_request:
    types: [ "closed" ]
    branches:
      - main
      - develop
  push:
    branches: [ "develop" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Gradle Permission
        run: chmod +x gradlew

      - name: Build Gradle
        run: ./gradlew clean build

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{secrets.GHCR_USERNAME}}
          password: ${{secrets.GHCR_TOKEN}}

      - name: Build Docker Image
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          SHORT_SHA=$(echo ${COMMIT_SHA} | cut -c1-7)
          echo ${COMMIT_SHA}
          echo ${SHORT_SHA}
          docker build -t ${{secrets.DOCKER_REPO}}:$SHORT_SHA .

      - name: Push Docker Image
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          SHORT_SHA=$(echo ${COMMIT_SHA} | cut -c1-7)
          echo ${COMMIT_SHA}
          echo ${SHORT_SHA}
          docker push ${{secrets.DOCKER_REPO}}:$SHORT_SHA
          docker tag ${{secrets.DOCKER_REPO}}:$SHORT_SHA ${{secrets.DOCKER_REPO}}:latest
          docker push ${{secrets.DOCKER_REPO}}:latest

      - name: move compose to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{secrets.SSH_KEY}}
          port: ${{ secrets.PORT }}
          source: "compose.yml"
          target: "giosk"
          overwrite: true

      - name: deploy to ec2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.SSH_KEY}}
          script: |
            cd ./giosk
            echo "${{secrets.ENV}}" > .env
            docker compose stop
            docker compose rm ${{secrets.SERVICES_EXCEPT_DB}}
            docker compose pull
            docker compose up --build -d
                      
        
